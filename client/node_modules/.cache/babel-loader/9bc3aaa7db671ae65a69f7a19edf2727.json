{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\mysql_crud_react\\\\src\\\\components\\\\teams\\\\GetTeam.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Team = () => {\n  _s();\n\n  const [teams, setTeams] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getTeamById();\n  }, []);\n\n  const getTeamById = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/teams/${id}`);\n      const a = response.map((name, id) => {\n        Object.keys(name.age).map(i => name.age[0]);\n      });\n      console.console.log(response);\n      setTeams(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  /*  for (const prop in teams) {\r\n       console.log(`teams.${prop} = ${teams[prop]}`);\r\n     } */\n\n\n  var all = [];\n\n  for (var key in teams) {\n    all.push(teams[key]);\n    let allObj = Object.entries(all).map(obj => {\n      obj.map((detail, get, fet) => {\n        console.log(detail);\n        setTeams(detail);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Team, \"eDDXvI3MI2OkFkHSClSR5yzS1RY=\", false, function () {\n  return [useParams];\n});\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/mysql_crud_react/src/components/teams/GetTeam.js"],"names":["useState","useEffect","axios","useNavigate","useParams","Team","teams","setTeams","id","getTeamById","response","get","a","map","name","Object","keys","age","i","console","log","data","error","all","key","push","allObj","entries","obj","detail","fet"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,+BAA8BH,EAAG,EAA5C,CAAvB;AACR,YAAMI,CAAC,GAASF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAMN,EAAN,KAAY;AAC7BO,QAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACG,GAAjB,EAAsBJ,GAAtB,CAA0BK,CAAC,IAAEJ,IAAI,CAACG,GAAL,CAAS,CAAT,CAA7B;AAEH,OAHO,CAAhB;AAIQE,MAAAA,OAAO,CACPA,OADA,CACQC,GADR,CACYV,QADZ;AAEAH,MAAAA,QAAQ,CAACG,QAAQ,CAACW,IAAV,CAAR;AACK,KATT,CASU,OAAOC,KAAP,EAAc;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;AACJ,GAbD;AAcD;AACH;AACA;;;AAEM,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAI,IAAIC,GAAR,IAAelB,KAAf,EAAsB;AAClBiB,IAAAA,GAAG,CAACE,IAAJ,CAASnB,KAAK,CAACkB,GAAD,CAAd;AACA,QAAIE,MAAM,GAAGX,MAAM,CAACY,OAAP,CAAeJ,GAAf,EAAoBV,GAApB,CAAyBe,GAAD,IAAS;AAC7CA,MAAAA,GAAG,CAACf,GAAJ,CAAQ,CAACgB,MAAD,EAAQlB,GAAR,EAAYmB,GAAZ,KAAkB;AACtBX,QAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACAtB,QAAAA,QAAQ,CAACsB,MAAD,CAAR;AACH,OAHD;AAIF,KALc,CAAb;AAML;;AACD,sBACI;AAAA,2BACK;AAAA,gBAAQvB;AAAR;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5CD;;GAAMD,I;UAEWD,S;;;KAFXC,I;AA8CN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst Team = () => {\r\n    const [teams, setTeams] = useState([]);\r\n    const {id } =useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamById();\r\n    }, []);\r\n\r\n    const getTeamById = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/teams/${id}`)\r\n    const a=        response.map((name,id) =>{\r\n                Object.keys(name.age).map(i=>name.age[0]\r\n                    )\r\n            })\r\n            console.\r\n            console.log(response)\r\n            setTeams(response.data)\r\n                } catch (error) {\r\n            console.log(error)    \r\n        }\r\n    }\r\n   /*  for (const prop in teams) {\r\n        console.log(`teams.${prop} = ${teams[prop]}`);\r\n      } */\r\n    \r\n      var all = [];\r\n      for(var key in teams) {\r\n          all.push(teams[key])\r\n          let allObj = Object.entries(all).map((obj) => {\r\n           obj.map((detail,get,fet)=>{\r\n               console.log(detail)\r\n               setTeams(detail)\r\n           })\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n             <tbody>{teams}\r\n            </tbody>\r\n             \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Team "]},"metadata":{},"sourceType":"module"}