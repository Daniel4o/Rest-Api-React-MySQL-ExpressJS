{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\mysql_crud_react\\\\src\\\\components\\\\players\\\\EditPlayer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport './Players.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPlayer = () => {\n  _s();\n\n  const [team, setTeam] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [name, setName] = useState([]);\n  const [teamId, setTeamId] = useState([]);\n  const [position, setPosition] = useState([]);\n  const [age, setAge] = useState([]);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getTeamId();\n    getPlayers();\n    getPlayerValues();\n  }, []);\n\n  const getTeamId = async () => {\n    const response = await axios.get('http://localhost:5000/teams');\n    const team = response.data.map(team => team.id).flat();\n    setTeam(team);\n  };\n\n  const getPlayerValues = async () => {\n    const response = await axios.get(`http://localhost:5000/players/${id}`);\n    const names = response.data.name;\n    setName(names);\n    setTeamId(response.data.teamId);\n    setPosition(response.data.position);\n    setAge(response.data.age);\n  };\n\n  const initialValues = {\n    name: name,\n    teamId: teamId,\n    positon: positon,\n    age: age\n  };\n  const validationSchema = Yup.object().shape({\n    teamId: Yup.number(),\n    name: Yup.string().min(3).max(15).notOneOf(players, 'Player with this name already exists!'),\n    position: Yup.string().min(2).max(10),\n    age: Yup.number().min(15).max(45)\n  });\n\n  const onSubmit = data => {\n    axios.patch(`http://localhost:5000/players/${id}`, data);\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPlayerPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Id: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"teamId\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"teamId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"position\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"age\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Create Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPlayer, \"pjY0ma2D7vPfZ2BtOMr16wb4rXQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditPlayer;\nexport default EditPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlayer\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/mysql_crud_react/src/components/players/EditPlayer.js"],"names":["useState","useEffect","axios","useNavigate","useParams","Formik","Form","Field","ErrorMessage","Yup","EditPlayer","team","setTeam","players","setPlayers","name","setName","teamId","setTeamId","position","setPosition","age","setAge","navigate","id","getTeamId","getPlayers","getPlayerValues","response","get","data","map","flat","names","initialValues","positon","validationSchema","object","shape","number","string","min","max","notOneOf","onSubmit","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Players.css'\r\n\r\nconst EditPlayer = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    const [name, setName] = useState([]);\r\n    const [teamId, setTeamId] = useState([]);\r\n    const [position, setPosition] = useState([]);\r\n    const [age, setAge] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamId();\r\n        getPlayers();\r\n        getPlayerValues();\r\n    }, []);\r\n\r\n    const getTeamId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.id).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n \r\n\r\n    const getPlayerValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/players/${id}`)\r\n       const names =response.data.name\r\n        setName(names)\r\n        setTeamId(response.data.teamId)\r\n        setPosition(response.data.position)\r\n        setAge(response.data.age)\r\n    }\r\n    const initialValues = {\r\n        name: name,\r\n        teamId: teamId,\r\n        positon: positon,\r\n        age: age,\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n        teamId: Yup.number(),\r\n        name: Yup.string().min(3).max(15)\r\n            .notOneOf(players, 'Player with this name already exists!'),\r\n        position: Yup.string().min(2).max(10),\r\n        age: Yup.number().min(15).max(45),\r\n    });\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/players/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPlayerPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Id: </label>\r\n                    <ErrorMessage name=\"teamId\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"teamId\"\r\n                    />\r\n                    <label>Name: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"name\"\r\n                    />\r\n                    <label>Position: </label>\r\n                    <ErrorMessage name=\"position\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"position\"\r\n                    />\r\n                    <label>Age: </label>\r\n                    <ErrorMessage name=\"age\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"age\"\r\n                    />\r\n                    <button type=\"submit\"> Create Player</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPlayer"]},"metadata":{},"sourceType":"module"}