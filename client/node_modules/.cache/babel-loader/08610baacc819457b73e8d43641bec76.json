{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\mysql_crud_react\\\\src\\\\components\\\\results\\\\EditResult.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport './Results.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditResult = () => {\n  _s();\n\n  const [hostId, setHostId] = useState([]);\n  const [guestId, setGuestId] = useState([]);\n  const [home_goals, setHomeGoals] = useState([]);\n  const [away_goals, setAwayGoals] = useState([]);\n  const [date, setDate] = useState([]);\n  const [venue, setVenue] = useState([]);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getTeamId();\n  }, []);\n\n  const getTeamId = async () => {\n    const response = await axios.get('http://localhost:5000/teams');\n    const teams = response.data.map(team => team.id).flat();\n    setHostId(teams);\n    setGuestId(teams);\n  };\n\n  const initialValues = {\n    host_id: \"\",\n    guest_id: \"\",\n    home_goals: \"\",\n    away_goals: \"\",\n    date: \"\",\n    venue: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    host_id: Yup.number().oneOf(hostId, 'No such host with this Id!'),\n    guest_id: Yup.number().oneOf(guestId, 'No such guest with this Id!').when('host_id', (host_id, schema) => {\n      return schema.test({\n        test: guest_id => guest_id !== '' || guest_id !== host_id,\n        message: 'One team cannot play against each other!'\n      });\n    }),\n    home_goals: Yup.number().min(0),\n    away_goals: Yup.number().min(0),\n    date: Yup.date(),\n    venue: Yup.string()\n  });\n\n  const handleChange = data => {\n    axios.patch(`http://localhost:5000/results/${id}`, data);\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createResultPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onChange: handleChange,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Host Id: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"host_id\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"host_id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Guest Id: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"guest_id\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"guest_id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Home Goals: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"home_goals\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"home_goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Away Goals: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"away_goals\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"away_goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"date\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Venue: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"venue\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreateResult\",\n          name: \"venue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Edit Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditResult, \"MOP91sk9Pk5zP2iFqi+BLjWzNss=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditResult;\nexport default EditResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditResult\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/mysql_crud_react/src/components/results/EditResult.js"],"names":["useState","useEffect","axios","useNavigate","useParams","Formik","Form","Field","ErrorMessage","Yup","EditResult","hostId","setHostId","guestId","setGuestId","home_goals","setHomeGoals","away_goals","setAwayGoals","date","setDate","venue","setVenue","navigate","id","getTeamId","response","get","teams","data","map","team","flat","initialValues","host_id","guest_id","validationSchema","object","shape","number","oneOf","when","schema","test","message","min","string","handleChange","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Results.css'\r\n\r\nconst EditResult = () => {\r\n    const [hostId, setHostId] = useState([]);\r\n    const [guestId, setGuestId] = useState([]);\r\n    const [home_goals, setHomeGoals] = useState([]);\r\n    const [away_goals, setAwayGoals] = useState([]);\r\n    const [date, setDate] = useState([]);\r\n    const [venue, setVenue] = useState([])\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamId();\r\n    }, []);\r\n\r\n    const getTeamId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const teams = response.data.map(team => team.id).flat();\r\n        setHostId(teams)\r\n        setGuestId(teams)\r\n    }\r\n\r\n    const initialValues = {\r\n        host_id: \"\",\r\n        guest_id: \"\",\r\n        home_goals: \"\",\r\n        away_goals: \"\",\r\n        date: \"\",\r\n        venue: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        host_id: Yup.number().oneOf(hostId, 'No such host with this Id!'),\r\n        guest_id: Yup.number().oneOf(guestId, 'No such guest with this Id!')\r\n            .when('host_id', (host_id, schema) => {\r\n                return schema.test({\r\n                    test: guest_id => guest_id !== '' || guest_id !== host_id,\r\n                    message: 'One team cannot play against each other!'\r\n                })\r\n            }),\r\n        home_goals: Yup.number().min(0),\r\n        away_goals: Yup.number().min(0),\r\n        date: Yup.date(),\r\n        venue: Yup.string()\r\n    });\r\n\r\n    const handleChange = (data) => {\r\n        axios.patch(`http://localhost:5000/results/${id}`, data) \r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createResultPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onChange={handleChange}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Host Id: </label>\r\n                    <ErrorMessage name=\"host_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"host_id\"\r\n                    />\r\n                    <label>Guest Id: </label>\r\n                    <ErrorMessage name=\"guest_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"guest_id\"\r\n                    />  <label>Home Goals: </label>\r\n                    <ErrorMessage name=\"home_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"home_goals\"\r\n                    />\r\n                    <label>Away Goals: </label>\r\n                    <ErrorMessage name=\"away_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"away_goals\"\r\n                    />\r\n                    <label>Date: </label>\r\n                    <ErrorMessage name=\"date\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"date\"\r\n                    />\r\n                    <label>Venue: </label>\r\n                    <ErrorMessage name=\"venue\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"venue\"\r\n                    />\r\n                    <button type=\"submit\"> Edit Result</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditResult"]},"metadata":{},"sourceType":"module"}