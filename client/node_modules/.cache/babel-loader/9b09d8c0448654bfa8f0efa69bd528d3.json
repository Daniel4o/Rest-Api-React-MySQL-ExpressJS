{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\fullCrud\\\\client\\\\src\\\\components\\\\players\\\\AddPlayer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport './Players.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPlayer = () => {\n  _s();\n\n  const [teams, setTeams] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getTeamId();\n    getPlayers();\n  }, []);\n\n  const getTeamId = async () => {\n    const response = await axios.get('http://localhost:5000/teams');\n    const teamId = response.data.map(team => team.id).flat();\n    setTeams(teamId);\n  };\n\n  const getPlayers = async () => {\n    const response = await axios.get('http://localhost:5000/players');\n    const player = response.data.map(player => player.name).flat();\n    console.log(player);\n    setPlayers(player);\n  };\n\n  const initialValues = {\n    teamId: \"\",\n    name: \"\",\n    position: \"\",\n    age: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    teamId: Yup.number(\"Id is a number value!\").required(\"Team Id is required!\").oneOf(teams, 'No such team with this id'),\n    name: Yup.string().required(\"Name is required!\").min(3, \"Name should be atleast 3 characters!\").max(15).notOneOf(players, 'Player with this name already exists!'),\n    position: Yup.string().min(2).max(10).required(\"Position field is required!\"),\n    age: Yup.number().min(15).max(45).required(\"Age is required!\")\n  });\n\n  const onSubmit = data => {\n    axios.post('http://localhost:5000/players', data);\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPlayerPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Id: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"teamId\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"teamId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"position\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"age\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePlayer\",\n          name: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Create Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: '/players',\n          className: \"edit\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPlayer, \"qhkOjMHGGkUAxJfnUg1U83LY9jg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddPlayer;\nexport default AddPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayer\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/fullCrud/client/src/components/players/AddPlayer.js"],"names":["useState","useEffect","axios","useNavigate","Formik","Form","Field","ErrorMessage","Yup","Link","AddPlayer","teams","setTeams","players","setPlayers","navigate","getTeamId","getPlayers","response","get","teamId","data","map","team","id","flat","player","name","console","log","initialValues","position","age","validationSchema","object","shape","number","required","oneOf","string","min","max","notOneOf","onSubmit","post"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport { Link } from 'react-router-dom';\r\nimport './Players.css'\r\n\r\nconst AddPlayer = () => {\r\n    const [teams, setTeams] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        getTeamId();\r\n        getPlayers();\r\n    }, []);\r\n\r\n    const getTeamId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const teamId = response.data.map(team => team.id).flat();\r\n        setTeams(teamId)\r\n    }\r\n\r\n    const getPlayers = async () => {\r\n        const response = await axios.get('http://localhost:5000/players')\r\n        const player = response.data.map(player => player.name).flat();\r\n        console.log(player)\r\n        setPlayers(player)\r\n    }\r\n\r\n    const initialValues = {\r\n        teamId: \"\",\r\n        name: \"\",\r\n        position: \"\",\r\n        age: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        teamId: Yup.number(\"Id is a number value!\").required(\"Team Id is required!\").oneOf(teams, 'No such team with this id'),\r\n        name: Yup.string().required(\"Name is required!\").min(3, \"Name should be atleast 3 characters!\").max(15)\r\n            .notOneOf(players, 'Player with this name already exists!'),\r\n        position: Yup.string().min(2).max(10).required(\"Position field is required!\"),\r\n        age: Yup.number().min(15).max(45).required(\"Age is required!\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post('http://localhost:5000/players', data)\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPlayerPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Id: </label>\r\n                    <ErrorMessage name=\"teamId\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"teamId\"\r\n                    />\r\n                    <label>Name: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"name\"\r\n                    />\r\n                    <label>Position: </label>\r\n                    <ErrorMessage name=\"position\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"position\"\r\n                    />\r\n                    <label>Age: </label>\r\n                    <ErrorMessage name=\"age\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"age\"\r\n                    />\r\n                    <button type=\"submit\"> Create Player</button>\r\n                    <Link to={'/players'} className='edit'>Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddPlayer"]},"metadata":{},"sourceType":"module"}