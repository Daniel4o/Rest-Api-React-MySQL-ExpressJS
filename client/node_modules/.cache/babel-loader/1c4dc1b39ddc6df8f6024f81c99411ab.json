{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\mysql_crud_react\\\\src\\\\components\\\\teams\\\\EditTeam.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport './Teams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTeam = () => {\n  _s();\n\n  const [team, setTeam] = useState([]);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getTeams();\n  }, []);\n\n  const getTeams = async () => {\n    const response = await axios.get('http://localhost:5000/teams');\n    const team = response.data.map(team => team.team_name).flat();\n    setTeam(team);\n  };\n\n  const getTeamValues = async () => {\n    const response = await axios.get(`http://localhost:5000/teams/${id}`);\n    set;\n  };\n\n  const initialValues = {\n    team_name: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    team_name: Yup.string().required().min(3).max(20).notOneOf(team, 'Team with this name exists!')\n  });\n\n  const onSubmit = data => {\n    axios.patch(`http://localhost:5000/teams/${id}`, data);\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createTeamPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"team_name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputeCreateTeam\",\n          name: \"team_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditTeam, \"kk1tHvDUtDI2q+C8di8I1VXXSAg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditTeam;\nexport default EditTeam;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTeam\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/mysql_crud_react/src/components/teams/EditTeam.js"],"names":["useState","useEffect","axios","useNavigate","useParams","Formik","Form","Field","ErrorMessage","Yup","EditTeam","team","setTeam","navigate","id","getTeams","response","get","data","map","team_name","flat","getTeamValues","set","initialValues","validationSchema","object","shape","string","required","min","max","notOneOf","onSubmit","patch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AACzB,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,6BAAV,CAAvB;AACA,UAAMN,IAAI,GAAGK,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBR,IAAI,IAAIA,IAAI,CAACS,SAA/B,EAA0CC,IAA1C,EAAb;AACAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAJD;;AAMA,QAAMW,aAAa,GAAG,YAAY;AAC9B,UAAMN,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,+BAA8BH,EAAG,EAA5C,CAAvB;AACAS,IAAAA,GAAG;AACN,GAHD;;AAKA,QAAMC,aAAa,GAAG;AAClBJ,IAAAA,SAAS,EAAE;AADO,GAAtB;AAIA,QAAMK,gBAAgB,GAAGhB,GAAG,CAACiB,MAAJ,GAAaC,KAAb,CAAmB;AACxCP,IAAAA,SAAS,EAAEX,GAAG,CAACmB,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EACVC,QADU,CACDrB,IADC,EACK,6BADL;AAD6B,GAAnB,CAAzB;;AAKA,QAAMsB,QAAQ,GAAIf,IAAD,IAAU;AACvBhB,IAAAA,KAAK,CAACgC,KAAN,CAAa,+BAA8BpB,EAAG,EAA9C,EAAiDI,IAAjD;AACAL,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,aAAa,EAAEW,aADnB;AAEI,MAAA,QAAQ,EAAES,QAFd;AAGI,MAAA,gBAAgB,EAAER,gBAHtB;AAAA,6BAKI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AACI,UAAA,YAAY,EAAC,KADjB;AAEI,UAAA,EAAE,EAAC,kBAFP;AAGI,UAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArDD;;GAAMf,Q;UAEeP,W,EACFC,S;;;KAHbM,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Teams.css'\r\n\r\nconst EditTeam = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        getTeams();\r\n    }, []);\r\n\r\n    const getTeams = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.team_name).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n    const getTeamValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/teams/${id}`)\r\n        set\r\n    }\r\n\r\n    const initialValues = {\r\n        team_name: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        team_name: Yup.string().required().min(3).max(20)\r\n        .notOneOf(team, 'Team with this name exists!')\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/teams/${id}`, data) \r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createTeamPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Name:</label>\r\n                    <ErrorMessage name=\"team_name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputeCreateTeam\"\r\n                        name=\"team_name\"\r\n                    />\r\n                    <button type=\"submit\">Edit</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTeam"]},"metadata":{},"sourceType":"module"}