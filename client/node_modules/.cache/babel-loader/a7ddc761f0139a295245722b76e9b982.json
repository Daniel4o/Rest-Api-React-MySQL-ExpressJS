{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\JavaScript\\\\Tutorial\\\\mysql_crud_react\\\\src\\\\components\\\\players\\\\Players.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useMemo } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './columns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Players = () => {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    getPlayers();\n  }, []);\n\n  const getPlayers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/players');\n      setPlayers(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deletePlayer = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/players/${id}`);\n      setPlayers(players.filter(player => player.id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => players, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPlayerPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Players/add\",\n      className: \"button is-primary mt-2\",\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: [rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this);\n        }), players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [index + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.teamId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/Players/edit/${player.id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletePlayer(player.id),\n              className: \"button is-small is-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      children: \"Back To Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Players, \"a16y5SwXDKF9pMEXDadx8uuIt+k=\", false, function () {\n  return [useTable];\n});\n\n_c = Players;\nexport default Players;\n\nvar _c;\n\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"sources":["D:/Programs/JavaScript/Tutorial/mysql_crud_react/src/components/players/Players.js"],"names":["useEffect","useState","useMemo","Link","axios","useTable","COLUMNS","Players","players","setPlayers","getPlayers","response","get","data","error","console","log","deletePlayer","id","delete","filter","player","columns","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","headerGroupProps","headers","column","getHeaderProps","render","row","getRowProps","index","teamId","name","position","age"],"mappings":"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","sourcesContent":["import { useEffect, useState, useMemo } from 'react'\r\nimport { Link, } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport {useTable} from 'react-table'\r\nimport { COLUMNS } from './columns'\r\nconst Players = () => {\r\n\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPlayers();\r\n  }, []);\r\n\r\n  const getPlayers = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/players')\r\n      setPlayers(response.data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const deletePlayer = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/players/${id}`)\r\n      setPlayers(players.filter(player => player.id !== id))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const data = useMemo(() => players, [])\r\n\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data\r\n  })\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = tableInstance\r\n\r\n  return (\r\n    <div className=\"createPlayerPage\">\r\n      <h2 className='text-center'>Players</h2>\r\n      <Link to=\"/Players/add\" className=\"button is-primary mt-2\">Add New</Link>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) =>\r\n          <tr {...headerGroupProps()}>\r\n            {\r\n              headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n          </tr>\r\n          )}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n            rows.map(row => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}></tr>\r\n              )\r\n            })\r\n          }\r\n          {players.map((player, index) => (\r\n            <tr key={player.id}>\r\n              <td>{index + 1}.</td>\r\n              <td>{player.teamId}</td>\r\n              <td>{player.name}</td>\r\n              <td>{player.position}</td>\r\n              <td>{player.age}</td>\r\n              <td>\r\n                <Link to={`/Players/edit/${player.id}`} >Edit</Link>\r\n                <button onClick={() => deletePlayer(player.id)}\r\n                  className=\"button is-small is-danger\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Link to={'/'}>Back To Home Page</Link>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Players;\r\n"]},"metadata":{},"sourceType":"module"}