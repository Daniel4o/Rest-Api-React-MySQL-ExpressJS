[{"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\index.js":"1","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\App.js":"2","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\reportWebVitals.js":"3","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\Players.js":"4","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\Teams.js":"5","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\AddTeam.js":"6","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\EditTeam.js":"7","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\EditPlayer.js":"8","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\AddPlayer.js":"9","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\Results.js":"10","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\AddResult.js":"11","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\EditResult.js":"12","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\GetTeam.js":"13","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teamPlayers\\MainGetTeamPlayers.js":"14","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teamPlayers\\GetTeamPlayersById.js":"15","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\homePage\\homePage.js":"16","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\homePage\\layout\\Layout.js":"17","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\navigation\\MainNavigation.js":"18","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\index.js":"19","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\App.js":"20","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\reportWebVitals.js":"21","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\AddTeam.js":"22","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\EditTeam.js":"23","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\AddResult.js":"24","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\Results.js":"25","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\Teams.js":"26","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\GetTeam.js":"27","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\homePage\\homePage.js":"28","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teamPlayers\\MainGetTeamPlayers.js":"29","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\AddPlayer.js":"30","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teamPlayers\\GetTeamPlayersById.js":"31","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\homePage\\layout\\Layout.js":"32","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\EditPlayer.js":"33","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\Players.js":"34","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\EditResult.js":"35","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\navigation\\MainNavigation.js":"36"},{"size":478,"mtime":1638719219796,"results":"37","hashOfConfig":"38"},{"size":1837,"mtime":1642157471650,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1638716676455,"results":"40","hashOfConfig":"38"},{"size":1803,"mtime":1641824498765,"results":"41","hashOfConfig":"38"},{"size":2063,"mtime":1642089329033,"results":"42","hashOfConfig":"38"},{"size":1872,"mtime":1642154987495,"results":"43","hashOfConfig":"38"},{"size":2391,"mtime":1642087982867,"results":"44","hashOfConfig":"38"},{"size":3984,"mtime":1642089557764,"results":"45","hashOfConfig":"38"},{"size":3412,"mtime":1642155135074,"results":"46","hashOfConfig":"38"},{"size":2012,"mtime":1641659580375,"results":"47","hashOfConfig":"38"},{"size":4179,"mtime":1642155076981,"results":"48","hashOfConfig":"38"},{"size":4864,"mtime":1642089593434,"results":"49","hashOfConfig":"38"},{"size":3683,"mtime":1642089836022,"results":"50","hashOfConfig":"38"},{"size":3010,"mtime":1642089869742,"results":"51","hashOfConfig":"38"},{"size":1608,"mtime":1641660232778,"results":"52","hashOfConfig":"38"},{"size":679,"mtime":1642071057270,"results":"53","hashOfConfig":"38"},{"size":277,"mtime":1642157011455,"results":"54","hashOfConfig":"38"},{"size":557,"mtime":1642070238787,"results":"55","hashOfConfig":"38"},{"size":478,"mtime":1638719219796,"results":"56","hashOfConfig":"57"},{"size":1829,"mtime":1642255305809,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":1638716676455,"results":"59","hashOfConfig":"57"},{"size":1964,"mtime":1642257352768,"results":"60","hashOfConfig":"57"},{"size":2493,"mtime":1642257429303,"results":"61","hashOfConfig":"57"},{"size":4346,"mtime":1642256872257,"results":"62","hashOfConfig":"57"},{"size":2013,"mtime":1642160961310,"results":"63","hashOfConfig":"57"},{"size":2065,"mtime":1642328356544,"results":"64","hashOfConfig":"57"},{"size":4077,"mtime":1642413704260,"results":"65","hashOfConfig":"57"},{"size":727,"mtime":1642160846869,"results":"66","hashOfConfig":"57"},{"size":3010,"mtime":1642089869742,"results":"67","hashOfConfig":"57"},{"size":3705,"mtime":1642257281873,"results":"68","hashOfConfig":"57"},{"size":1675,"mtime":1642160979294,"results":"69","hashOfConfig":"57"},{"size":276,"mtime":1642255021789,"results":"70","hashOfConfig":"57"},{"size":4284,"mtime":1642257274514,"results":"71","hashOfConfig":"57"},{"size":1802,"mtime":1642160918471,"results":"72","hashOfConfig":"57"},{"size":5018,"mtime":1642256923921,"results":"73","hashOfConfig":"57"},{"size":557,"mtime":1642070238787,"results":"74","hashOfConfig":"57"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"4vo01m",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"1dq99ru",{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"121"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"121"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"121"},"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\index.js",[],["160","161"],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\App.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\reportWebVitals.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\Players.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\Teams.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\AddTeam.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\EditTeam.js",["162"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Teams.css'\r\n\r\nconst EditTeam = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const [team_name, setTeamName] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        getTeams();\r\n        getTeamValues();\r\n    }, []);\r\n\r\n    const getTeams = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.team_name).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n    const getTeamValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/teams/${id}`)\r\n        const teamName = response.data.teamPlayers.map(team => team.team_name).flat();\r\n        setTeamName(teamName[0])\r\n    }\r\n\r\n    for (var i = 0; i < team.length; i++) {\r\n        if (team[i] === team_name) {\r\n            team.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        team_name: team_name,\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        team_name: Yup.string().required().min(3).max(20)\r\n            .notOneOf(team, 'Team with this name exists!')\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/teams/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createTeamPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Name:</label>\r\n                    <ErrorMessage name=\"team_name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateTeam\"\r\n                        name=\"team_name\"\r\n                    />\r\n                    <button type=\"submit\">Edit</button>\r\n                    <Link to={'/teams'} className='edit'>Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTeam","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\EditPlayer.js",["163"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Players.css'\r\n\r\nconst EditPlayer = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    const [name, setName] = useState([]);\r\n    const [teamId, setTeamId] = useState([]);\r\n    const [position, setPosition] = useState([]);\r\n    const [age, setAge] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamId();\r\n        getPlayers();\r\n        getPlayerValues();\r\n    }, []);\r\n\r\n    const getTeamId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.id).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n    const getPlayers = async () => {\r\n        const response = await axios.get('http://localhost:5000/players')\r\n        const player = response.data.map(player => player.name).flat();\r\n        setPlayers(player)\r\n    }\r\n\r\n    const getPlayerValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/players/${id}`)\r\n        setName(response.data.name)\r\n        setTeamId(response.data.teamId)\r\n        setPosition(response.data.position)\r\n        setAge(response.data.age)\r\n    }\r\n\r\n    for (var i = 0; i < players.length; i++) {\r\n        if (players[i] === name) {\r\n            players.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        name: name,\r\n        teamId: teamId,\r\n        position: position,\r\n        age: age,\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n        teamId: Yup.number().oneOf(team, 'No such team with this id'),\r\n        name: Yup.string().min(3).max(15)\r\n            .notOneOf(players, 'Player with this name already exists!'),\r\n        position: Yup.string().min(2).max(10),\r\n        age: Yup.number().min(15).max(45),\r\n    });\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/players/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPlayerPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Id: </label>\r\n                    <ErrorMessage name=\"teamId\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"teamId\"\r\n                    />\r\n                    <label>Name: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"name\"\r\n                    />\r\n                    <label>Position: </label>\r\n                    <ErrorMessage name=\"position\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"position\"\r\n                    />\r\n                    <label>Age: </label>\r\n                    <ErrorMessage name=\"age\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"age\"\r\n                    />\r\n                    <button type=\"submit\"> Edit Player</button>\r\n                    <Link to={'/players'} className='edit'> Cancel </Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPlayer","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\players\\AddPlayer.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\Results.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\AddResult.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\results\\EditResult.js",["164"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport * as Yup from 'yup'\r\nimport './Results.css'\r\n\r\nconst EditResult = () => {\r\n    const [hostId, setHostId] = useState([]);\r\n    const [guestId, setGuestId] = useState([]);\r\n\r\n    const [host_id, setHost_id] = useState([]);\r\n    const [guest_id, setGuest_id] = useState([]);\r\n    const [home_goals, setHomeGoals] = useState([]);\r\n    const [away_goals, setAwayGoals] = useState([]);\r\n    const [date, setDate] = useState([]);\r\n    const [venue, setVenue] = useState([])\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamsId();\r\n        getResultValues();\r\n    }, []);\r\n\r\n    const getTeamsId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const teams = response.data.map(team => team.id).flat();\r\n        setHostId(teams)\r\n        setGuestId(teams)\r\n    }\r\n\r\n    const getResultValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/results/${id}`)\r\n        console.log(response.data)\r\n        setHost_id(response.data.host_id)\r\n        setGuest_id(response.data.guest_id)\r\n        setHomeGoals(response.data.home_goals)\r\n        setAwayGoals(response.data.away_goals)\r\n        setDate(response.data.date)\r\n        setVenue(response.data.venue)\r\n    }\r\n    \r\n    const initialValues = {\r\n        host_id: host_id,\r\n        guest_id: guest_id,\r\n        home_goals: home_goals,\r\n        away_goals: away_goals,\r\n        date: date,\r\n        venue: venue,\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        host_id: Yup.number().oneOf(hostId, 'No such host with this Id!'),\r\n        guest_id: Yup.number().oneOf(guestId, 'No such guest with this Id!')\r\n            .when('host_id', (host_id, schema) => {\r\n                return schema.test({\r\n                    test: guest_id => guest_id !== '' || guest_id !== host_id,\r\n                    message: 'One team cannot play against each other!'\r\n                })\r\n            }),\r\n        home_goals: Yup.number().min(0),\r\n        away_goals: Yup.number().min(0),\r\n        date: Yup.date(),\r\n        venue: Yup.string()\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/results/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createResultPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Host Id: </label>\r\n                    <ErrorMessage name=\"host_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"host_id\"\r\n                    />\r\n                    <label>Guest Id: </label>\r\n                    <ErrorMessage name=\"guest_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"guest_id\"\r\n                    />  <label>Home Goals: </label>\r\n                    <ErrorMessage name=\"home_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"home_goals\"\r\n                    />\r\n                    <label>Away Goals: </label>\r\n                    <ErrorMessage name=\"away_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"away_goals\"\r\n                    />\r\n                    <label>Date: </label>\r\n                    <ErrorMessage name=\"date\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"date\"\r\n                    />\r\n                    <label>Venue: </label>\r\n                    <ErrorMessage name=\"venue\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"venue\"\r\n                    />\r\n                    <button type=\"submit\"> Edit Result</button>\r\n                    <Link to={'/results'} className='edit'>Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditResult","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teams\\GetTeam.js",["165","166"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Team = () => {\r\n    const [homeResults, sethomeResults] = useState([]);\r\n    const [awayResults, setAwayResult] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        getTeamById();\r\n    }, []);\r\n\r\n    const getTeamById = async () => {\r\n\r\n        await axios.get(`http://localhost:5000/teams/${id}`)\r\n            .then((response) => {\r\n                const homeRes = response.data.homeResults\r\n                sethomeResults(homeRes)\r\n                const awayRes = response.data.awayResults\r\n                setAwayResult(awayRes)\r\n                const teamPlayers = response.data.teamPlayers\r\n                setPlayers(teamPlayers)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='centered'>Home Results</h2>\r\n            <Link to={'/teams'} className='link'>Back to Teams</Link>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Host Id</th>\r\n                    <th>Guest Id</th>\r\n                    <th>Home Goals</th>\r\n                    <th>Away Goals</th>\r\n                    <th>Date</th>\r\n                    <th>Venue</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {homeResults.map((hres, index) => (\r\n                    <tr key={hres.id}>\r\n                        <td>{index + 1}.</td>\r\n                        <td>{hres['h.host_id']}</td>\r\n                        <td>{hres['h.guest_id']}</td>\r\n                        <td>{hres['h.home_goals']}</td>\r\n                        <td>{hres['h.away_goals']}</td>\r\n                        <td>{hres['h.date']} </td>\r\n                        <td>{hres['h.venue']}</td>\r\n\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n                    <h2 className='centered'>Away Results</h2>\r\n                    <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Host Id</th>\r\n                    <th>Guest Id</th>\r\n                    <th>Home Goals</th>\r\n                    <th>Away Goals</th>\r\n                    <th>Date</th>\r\n                    <th>Venue</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {awayResults.map((ares, index) => (\r\n                    <tr key={ares.id}>\r\n                        <td>{index + 1}.</td>\r\n                        <td>{ares['a.host_id']}</td>\r\n                        <td>{ares['a.guest_id']}</td>\r\n                        <td>{ares['a.home_goals']}</td>\r\n                        <td>{ares['a.away_goals']}</td>\r\n                        <td>{ares['a.date']} </td>\r\n                        <td>{ares['a.venue']}</td>\r\n\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n<h2 className='centered'>Players</h2>\r\n<table>\r\n<thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>Name</th>\r\n            <th>Position</th>\r\n            <th>Age</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {players.map((player, index) => (\r\n            <tr key={player.id}>\r\n              <td>{index + 1}.</td>\r\n              <td>{player['p.name']}</td>\r\n              <td>{player['p.position']}</td>\r\n              <td>{player['p.age']}</td>\r\n              </tr>\r\n          ))}\r\n              </tbody>\r\n              </table>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Team ","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teamPlayers\\MainGetTeamPlayers.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\teamPlayers\\GetTeamPlayersById.js",["167"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams, Link } from 'react-router-dom';\r\n\r\nconst TeamPlayersById = () => {\r\n    const [teamPlayersById, setTeamPlayersById] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamPlayersById();\r\n    })\r\n\r\n    const getTeamPlayersById = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/team-players/${id}`)\r\n            setTeamPlayersById(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='centered'>Players</h2>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Name</th>\r\n                    <th>Position</th>\r\n                    <th>Age</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {teamPlayersById.map((value, index) => (\r\n                    <tr key={value['p.id']}>\r\n                        <td>{index + 1}.</td>\r\n                        <td>{value['p.name']}</td>\r\n                        <td>{value['p.age']}</td>\r\n                        <td>{value['p.position']}</td>\r\n                    </tr>\r\n                ))}\r\n                <div> <Link to={'/Team-Players'} className='link'>Back To Team Players</Link> </div>\r\n                <div> <Link to={'/'} className='link'>Home Page</Link> </div>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamPlayersById","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\homePage\\homePage.js",["168"],"import image from './img/images.png'\r\nimport './img/img.css'\r\nimport './layout/Layout.css'\r\n\r\nconst HomePage = ()  => {\r\n    return (\r\n        <div >\r\n     <img src={image} className=\"img\" />\r\n     <div className=\"text\">\r\n     <p >\r\n              Welcome to the Premier League Rest Api server !\r\n              <br/>Here you can create your own teams, players and matches.\r\n              <br/>If you don't like the name of your teams, your players or you've created an incorrect result you can edit it.\r\n             <br/> You can also remove listed if you mistakenly added a data.\r\n            </p>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default HomePage","D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\homePage\\layout\\Layout.js",[],"D:\\Programs\\JavaScript\\Tutorial\\mysql_crud_react\\src\\components\\navigation\\MainNavigation.js",["169"],"import { Link, Router } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css'\r\n\r\n\r\nfunction MainNavigation() {\r\n\r\n    return <header className={classes.header}>\r\n        <div className={classes.logo}>Premier League</div>\r\n        <li><Link to='/'>Home</Link></li>\r\n        <li> <Link to='/Teams'>Teams</Link></li>\r\n        <li> <Link to='/Players'>Players</Link></li>\r\n        <li><Link to='/Results'>Results</Link></li>\r\n        <li><Link to='/Team-Players'>Team Players</Link></li>\r\n    </header>\r\n}\r\n\r\nexport default MainNavigation;","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\index.js",[],["170","171"],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\App.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\reportWebVitals.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\AddTeam.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\EditTeam.js",["172"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Teams.css'\r\n\r\nconst EditTeam = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const [team_name, setTeamName] = useState([]);\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getTeams();\r\n        getTeamValues();\r\n    }, []);\r\n\r\n    const getTeams = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.team_name).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n    const getTeamValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/teams/${id}`)\r\n        const teamName = response.data.teamPlayers.map(team => team.team_name).flat();\r\n        setTeamName(teamName[0])\r\n    }\r\n\r\n    for (var i = 0; i < team.length; i++) {\r\n        if (team[i] === team_name) {\r\n            team.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        team_name: team_name,\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n    team_name: Yup.string().required().min(3, \"Team name is too short, minimum is 3 characters!\").max(20, \"Team name is too long, maximum is 20 characters!\")\r\n            .notOneOf(team, 'Team with this name exists!')\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/teams/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createTeamPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Name:</label>\r\n                    <ErrorMessage name=\"team_name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateTeam\"\r\n                        name=\"team_name\"\r\n                    />\r\n                    <button type=\"submit\">Edit</button>\r\n                    <Link to={'/teams'} className='edit'>Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTeam","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\AddResult.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\Results.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\Teams.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teams\\GetTeam.js",["173","174"],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\homePage\\homePage.js",["175"],"import image from './img/images.png'\r\nimport './img/img.css'\r\nimport './layout/Layout.css'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div >\r\n            <img src={image} className=\"img\" />\r\n            <div className=\"text\">\r\n                <p >\r\n                    Welcome to the Premier League Rest Api server !\r\n                    <br />Here you can create your own teams, players and matches.\r\n                    <br />If you don't like the name of your teams, your players or you've created an incorrect result you can edit it.\r\n                    <br /> You can also remove listed if you mistakenly added a data.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teamPlayers\\MainGetTeamPlayers.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\AddPlayer.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\teamPlayers\\GetTeamPlayersById.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\homePage\\layout\\Layout.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\EditPlayer.js",["176"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Players.css'\r\n\r\nconst EditPlayer = () => {\r\n    const [team, setTeam] = useState([]);\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    const [name, setName] = useState([]);\r\n    const [teamId, setTeamId] = useState([]);\r\n    const [position, setPosition] = useState([]);\r\n    const [age, setAge] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamId();\r\n        getPlayers();\r\n        getPlayerValues();\r\n    }, []);\r\n\r\n    const getTeamId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const team = response.data.map(team => team.id).flat();\r\n        setTeam(team)\r\n    }\r\n\r\n    const getPlayers = async () => {\r\n        const response = await axios.get('http://localhost:5000/players')\r\n        const player = response.data.map(player => player.name).flat();\r\n        setPlayers(player)\r\n    }\r\n\r\n    const getPlayerValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/players/${id}`)\r\n        setName(response.data.name)\r\n        setTeamId(response.data.teamId)\r\n        setPosition(response.data.position)\r\n        setAge(response.data.age)\r\n    }\r\n\r\n    for (var i = 0; i < players.length; i++) {\r\n        if (players[i] === name) {\r\n            players.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    const initialValues = {\r\n        name: name,\r\n        teamId: teamId,\r\n        position: position,\r\n        age: age,\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        teamId: Yup.number(\"Id is a number value!\").oneOf(team, 'No such team with this id'),\r\n        name: Yup.string().min(3, \"Name should be atleast 3 characters!\").max(15, \"Name should be maximum 15 characters!\")\r\n            .notOneOf(players, 'Player with this name already exists!'),\r\n        position: Yup.string().min(2, \"Minimum position value is 2 characters!\").max(10, \"Maxmimum position value is 10 characters!\"),\r\n        age: Yup.number(\"Age is a number value!\").min(15,\"Player should atleast 15 years of age!\").max(45,\"Player is too old, maximum age is 45!\")\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/players/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPlayerPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Team Id: </label>\r\n                    <ErrorMessage name=\"teamId\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"teamId\"\r\n                    />\r\n                    <label>Name: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"name\"\r\n                    />\r\n                    <label>Position: </label>\r\n                    <ErrorMessage name=\"position\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"position\"\r\n                    />\r\n                    <label>Age: </label>\r\n                    <ErrorMessage name=\"age\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreatePlayer\"\r\n                        name=\"age\"\r\n                    />\r\n                    <button type=\"submit\"> Edit Player</button>\r\n                    <Link to={'/players'} className='edit'> Cancel </Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPlayer","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\players\\Players.js",[],"D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\results\\EditResult.js",["177"],"import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport * as Yup from 'yup'\r\nimport './Results.css'\r\n\r\nconst EditResult = () => {\r\n    const [hostId, setHostId] = useState([]);\r\n    const [guestId, setGuestId] = useState([]);\r\n\r\n    const [host_id, setHost_id] = useState([]);\r\n    const [guest_id, setGuest_id] = useState([]);\r\n    const [home_goals, setHomeGoals] = useState([]);\r\n    const [away_goals, setAwayGoals] = useState([]);\r\n    const [date, setDate] = useState([]);\r\n    const [venue, setVenue] = useState([])\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getTeamsId();\r\n        getResultValues();\r\n    }, []);\r\n\r\n    const getTeamsId = async () => {\r\n        const response = await axios.get('http://localhost:5000/teams')\r\n        const teams = response.data.map(team => team.id).flat();\r\n        setHostId(teams)\r\n        setGuestId(teams)\r\n    }\r\n\r\n    const getResultValues = async () => {\r\n        const response = await axios.get(`http://localhost:5000/results/${id}`)\r\n        console.log(response.data)\r\n        setHost_id(response.data.host_id)\r\n        setGuest_id(response.data.guest_id)\r\n        setHomeGoals(response.data.home_goals)\r\n        setAwayGoals(response.data.away_goals)\r\n        setDate(response.data.date)\r\n        setVenue(response.data.venue)\r\n    }\r\n\r\n    const initialValues = {\r\n        host_id: host_id,\r\n        guest_id: guest_id,\r\n        home_goals: home_goals,\r\n        away_goals: away_goals,\r\n        date: date,\r\n        venue: venue,\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        host_id: Yup.number(\"Id is a number value!\").oneOf(hostId, 'No such host with this Id!'),\r\n        guest_id: Yup.number(\"Id is a number value!\").oneOf(guestId, 'No such guest with this Id!')\r\n            .when('host_id', (host_id, schema) => {\r\n                return schema.test({\r\n                    test: guest_id => guest_id !== '' || guest_id !== host_id,\r\n                    message: 'One team cannot play against each other!'\r\n                })\r\n            }),\r\n        home_goals: Yup.number(\"Goals is a number value!\").min(0, \"Result cannot be negative!\"),\r\n        away_goals: Yup.number(\"Goals is a number value!\").min(0, \"Result cannot be negative!\"),\r\n        date: Yup.date(),\r\n        venue: Yup.string()\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.patch(`http://localhost:5000/results/${id}`, data)\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"createResultPage\">\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Host Id: </label>\r\n                    <ErrorMessage name=\"host_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"host_id\"\r\n                    />\r\n                    <label>Guest Id: </label>\r\n                    <ErrorMessage name=\"guest_id\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"guest_id\"\r\n                    />  <label>Home Goals: </label>\r\n                    <ErrorMessage name=\"home_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"home_goals\"\r\n                    />\r\n                    <label>Away Goals: </label>\r\n                    <ErrorMessage name=\"away_goals\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"away_goals\"\r\n                    />\r\n                    <label>Date: </label>\r\n                    <ErrorMessage name=\"date\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"date\"\r\n                    />\r\n                    <label>Venue: </label>\r\n                    <ErrorMessage name=\"venue\" component=\"span\" />\r\n                    <Field\r\n                        autocomplete=\"off\"\r\n                        id=\"inputCreateResult\"\r\n                        name=\"venue\"\r\n                    />\r\n                    <button type=\"submit\"> Edit Result</button>\r\n                    <Link to={'/results'} className='edit'>Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditResult","D:\\Programs\\JavaScript\\Tutorial\\fullCrud\\client\\src\\components\\navigation\\MainNavigation.js",["178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":17,"column":8,"nodeType":"185","endLine":17,"endColumn":10,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":25,"column":8,"nodeType":"185","endLine":25,"endColumn":10,"suggestions":"188"},{"ruleId":"183","severity":1,"message":"189","line":25,"column":8,"nodeType":"185","endLine":25,"endColumn":10,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"195","line":14,"column":8,"nodeType":"185","endLine":14,"endColumn":10,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":8,"column":6,"nodeType":"199","endLine":8,"endColumn":41},{"ruleId":"191","severity":1,"message":"200","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":22},{"ruleId":"179","replacedBy":"201"},{"ruleId":"181","replacedBy":"202"},{"ruleId":"183","severity":1,"message":"184","line":18,"column":8,"nodeType":"185","endLine":18,"endColumn":10,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"195","line":14,"column":8,"nodeType":"185","endLine":14,"endColumn":10,"suggestions":"204"},{"ruleId":"197","severity":1,"message":"198","line":8,"column":13,"nodeType":"199","endLine":8,"endColumn":48},{"ruleId":"183","severity":1,"message":"187","line":25,"column":8,"nodeType":"185","endLine":25,"endColumn":10,"suggestions":"205"},{"ruleId":"183","severity":1,"message":"189","line":25,"column":8,"nodeType":"185","endLine":25,"endColumn":10,"suggestions":"206"},{"ruleId":"191","severity":1,"message":"200","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":22},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTeamValues'. Either include it or remove the dependency array.","ArrayExpression",["209"],"React Hook useEffect has a missing dependency: 'getPlayerValues'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'getResultValues'. Either include it or remove the dependency array.",["211"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getTeamById'. Either include it or remove the dependency array.",["212"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.",["207"],["208"],["213"],["214"],["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"217","fix":"225"},{"desc":"223","fix":"226"},{"desc":"219","fix":"227"},{"desc":"221","fix":"228"},"Update the dependencies array to be: [getTeamValues]",{"range":"229","text":"230"},"Update the dependencies array to be: [getPlayerValues]",{"range":"231","text":"232"},"Update the dependencies array to be: [getResultValues]",{"range":"233","text":"234"},"Update the dependencies array to be: [getTeamById]",{"range":"235","text":"236"},{"range":"237","text":"230"},{"range":"238","text":"236"},{"range":"239","text":"232"},{"range":"240","text":"234"},[557,559],"[getTeamValues]",[772,774],"[getPlayerValues]",[865,867],"[getResultValues]",[454,456],"[getTeamById]",[559,561],[450,452],[772,774],[865,867]]